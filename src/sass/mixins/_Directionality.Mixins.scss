// Copyright (c) Microsoft. All rights reserved. Licensed under the MIT license. See LICENSE in the project root for license information.

//
// Office UI Fabric
// --------------------------------------------------
// Directionality mixins to generate LTR and RTL-specific styles

// Base left-to-right mixin definition.
@mixin ms-u-LTR {
  [dir='ltr'] & {
    @content;
  }
}

// Base right-to-left mixin definition.
@mixin ms-u-RTL {
  [dir='rtl'] & {
    @content;
  }
}

// Use baseRTL on a root element (e.g. page or region) that needs RTL support.
@mixin ms-u-baseRtl {
  @include ms-u-RTL {
    direction: rtl;
    unicode-bidi: bidi-override;
  }
}


// Common CSS property mixins with support for RTL.
// Use to automatically create RTL versions of your properties.

// Border styles.
@mixin ms-u-border-color($top, $right, $bottom, $left) {
  border-color: $top $right $bottom $left;

  @include ms-u-RTL {
    border-color: $top $left $bottom $right;
  }
}

@mixin ms-u-border-left($width, $style, $color) {
  @include ms-u-LTR {
    border-left: $width $style $color;
  }

  @include ms-u-RTL {
    border-right: $width $style $color;
  }
}

@mixin ms-u-border-left-color($color) {
  @include ms-u-LTR {
    border-left-color: $color;
  }

  @include ms-u-RTL {
    border-right-color: $color;
  }
}

@mixin ms-u-border-left-style($style) {
  @include ms-u-LTR {
    border-left-style: $style;
  }

  @include ms-u-RTL {
    border-right-style: $style;
  }
}

@mixin ms-u-border-left-width($width) {
  @include ms-u-LTR {
    border-left-width: $width;
  }

  @include ms-u-RTL {
    border-right-width: $width;
  }
}

@mixin ms-u-border-radius($topLeft, $topRight, $bottomRight, $bottomLeft) {
  border-radius: $topLeft $topRight $bottomRight $bottomLeft;

  @include ms-u-RTL {
    border-radius: $topRight $topLeft $bottomLeft $bottomRight;
  }
}

@mixin ms-u-border-right($width, $style, $color) {
  @include ms-u-LTR {
    border-right: $width $style $color;
  }

  @include ms-u-RTL {
    border-left: $width $style $color;
  }
}

@mixin ms-u-border-right-color($color) {
  @include ms-u-LTR {
      border-right-color: $color;
  }

  @include ms-u-RTL {
      border-left-color: $color;
  }
}

@mixin ms-u-border-right-style($style) {
  @include ms-u-LTR {
    border-right-style: $style;
  }
  
  @include ms-u-RTL {
    border-left-style: $style;
  }
}

@mixin ms-u-border-right-width($width) {
  @include ms-u-LTR {
    border-right-width: $width;
  }

  @include ms-u-RTL {
    border-left-width: $width;
  }
}

// Floats.
@mixin ms-u-clear($side) {
  @if $side == left {
    @include ms-u-LTR {
      clear: $side;
    }

    @include ms-u-RTL {
      clear: right;
    }
  } @else if $side == right {
    @include ms-u-LTR {
      clear: $side;
    }

    @include ms-u-RTL {
      clear: left;
    }
  } @else {
      clear: $side;
  }
}

@mixin ms-u-float($direction) {
  @if $direction == left {
    @include ms-u-LTR {
      float: left;
    }

    @include ms-u-RTL {
      float: right;
    }
  } @else {
    @include ms-u-LTR {
      float: right;
    }

    @include ms-u-RTL {
      float: left;
    }
  }
}

// Positioning.
@mixin ms-u-left($distance) {
  @include ms-u-LTR {
    left: $distance;
  }

  @include ms-u-RTL {
    right: $distance;
  }
}

@mixin ms-u-right($distance) {
  @include ms-u-LTR {
    right: $distance;
  }

  @include ms-u-RTL {
    left: $distance;
  }
}

// Margins.
@mixin ms-u-margin($top, $right, $bottom, $left) {
  margin: $top $right $bottom $left;

  @include ms-u-RTL {
    margin: $top $left $bottom $right;
  }
}

@mixin ms-u-margin-left($distance) {
  @include ms-u-LTR {
    margin-left: $distance;
  }

  @include ms-u-RTL {
    margin-right: $distance;
  }
}

@mixin ms-u-margin-right($distance) {
  @include ms-u-LTR {
    margin-right: $distance;
  }
  @include ms-u-RTL {
    margin-left: $distance;
  }
}

// Padding.
@mixin ms-u-padding($top, $right, $bottom, $left) {
  padding: $top $right $bottom $left;

  @include ms-u-RTL {
    padding: $top $left $bottom $right;
  }
}

@mixin ms-u-padding-left($distance) {
  @include ms-u-LTR {
    padding-left: $distance;
  }

  @include ms-u-RTL {
    padding-right: $distance;
  }
}

@mixin ms-u-padding-right($distance) {
  @include ms-u-LTR {
    padding-right: $distance;
  }

  @include ms-u-RTL {
    padding-left: $distance;
  }
}

// Text-alignment.
@mixin ms-u-text-align($direction) {
  @if $direction == left {
    @include ms-u-LTR {
      text-align: left;
    }

    @include ms-u-RTL {
      text-align: right;
    }
  } @else {
    @include ms-u-LTR {
      text-align: right;
    }

    @include ms-u-RTL {
      text-align: left;
    }
  }
}

// Box-shadow.
@mixin ms-u-box-shadow($left, $etc) {
  @include ms-u-LTR {
    box-shadow: $left $etc;
  }

  @include ms-u-RTL {
    box-shadow: -$left $etc;
  }
}

// Transforms.
@mixin ms-u-transform-scaleX($scaleX: 1) {
  @include ms-u-LTR {
    transform: scaleX($scaleX);
  }

  @include ms-u-RTL {
    transform: scaleX(-$scaleX);
  }
}

@mixin ms-u-transform-translateX($distance) {
  @include ms-u-LTR {
    transform: translateX($distance);
  }

  @include ms-u-RTL {
    transform: translateX(-$distance);
  }
}

// Transitions. Only supported when ONLY left/right are declared
@mixin ms-u-transition-property($direction) {
  @if $direction == left {
    @include ms-u-LTR {
      transition-property: left;
    }

    @include ms-u-RTL {
      transition-property: right;
    }
  } @else {
    @include ms-u-LTR {
      transition-property: right;
    }

    @include ms-u-RTL {
      transition-property: left;
    }
  }
}
